ğŸŸ¢ Niveau 1 : DÃ©butant (Facile)

Afficher "Bonjour le monde".

Calculer la somme de deux nombres donnÃ©s.

VÃ©rifier si un nombre est pair ou impair.

Trouver le plus grand de deux nombres.

Afficher la table de multiplication dâ€™un nombre.

Calculer la factorielle dâ€™un nombre (n!).

Compter le nombre de chiffres dans un entier.

VÃ©rifier si un nombre est premier.

Inverser une chaÃ®ne de caractÃ¨res.

Calculer la somme des n premiers entiers.

VÃ©rifier si un mot est un palindrome.

Trouver le plus petit Ã©lÃ©ment dâ€™un tableau.

Trouver le plus grand Ã©lÃ©ment dâ€™un tableau.

Calculer la moyenne dâ€™un tableau de nombres.

Compter les voyelles dans une chaÃ®ne.

ğŸŸ¡ Niveau 2 : IntermÃ©diaire (Moyen)

Trouver le plus grand commun diviseur (PGCD) de deux nombres.

Trouver le plus petit commun multiple (PPCM) de deux nombres.

GÃ©nÃ©rer la suite de Fibonacci jusquâ€™Ã  n.

VÃ©rifier si un nombre est un carrÃ© parfait.

Trier un tableau avec le tri par sÃ©lection.

Trouver la deuxiÃ¨me plus grande valeur dâ€™un tableau.

Compter les mots dans une phrase.

Calculer la puissance dâ€™un nombre sans utiliser la fonction pow().

Trouver le maximum et minimum dâ€™un tableau en un seul parcours.

VÃ©rifier si une chaÃ®ne est une anagramme dâ€™une autre.

Supprimer les doublons dans un tableau.

Compter les frÃ©quences des caractÃ¨res dâ€™une chaÃ®ne.

VÃ©rifier si un tableau est triÃ©.

Trouver lâ€™intersection de deux tableaux.

Inverser un tableau en place.

ğŸ”µ Niveau 3 : AvancÃ© (Difficile)

ImplÃ©menter le tri rapide (QuickSort).

ImplÃ©menter le tri fusion (MergeSort).

ImplÃ©menter la recherche dichotomique (binaire).

Trouver la sous-chaÃ®ne la plus longue sans caractÃ¨res rÃ©pÃ©tÃ©s.

Trouver le plus long palindrome dans une chaÃ®ne.

VÃ©rifier si une matrice est symÃ©trique.

Transposer une matrice.

Effectuer la multiplication de deux matrices.

Trouver la sous-sÃ©quence croissante la plus longue.

DÃ©tecter les parenthÃ¨ses correctement fermÃ©es (pile).

Trouver le plus court chemin dans un graphe (Dijkstra).

DÃ©tecter un cycle dans un graphe.

GÃ©nÃ©rer toutes les permutations dâ€™un mot.

GÃ©nÃ©rer toutes les combinaisons possibles dâ€™un tableau.

RÃ©soudre le problÃ¨me des tours de HanoÃ¯.

ğŸ”´ Niveau 4 : Expert (TrÃ¨s Ã‰levÃ©)

RÃ©soudre le problÃ¨me du sac Ã  dos (Knapsack).

ImplÃ©menter lâ€™algorithme de Floyd-Warshall (tous les plus courts chemins).

ImplÃ©menter lâ€™algorithme de Bellman-Ford.

RÃ©soudre un sudoku par backtracking.

RÃ©soudre un labyrinthe par recherche en profondeur (DFS).

RÃ©soudre un labyrinthe par recherche en largeur (BFS).

ImplÃ©menter lâ€™algorithme A* (chemin optimal).

Trouver lâ€™arbre couvrant minimum avec Prim.

Trouver lâ€™arbre couvrant minimum avec Kruskal.

RÃ©soudre le problÃ¨me du voyageur de commerce (TSP) en backtracking.

ImplÃ©menter lâ€™algorithme de KMP pour recherche de motif.

ImplÃ©menter lâ€™algorithme de Rabin-Karp.

Construire un arbre binaire Ã  partir dâ€™un tableau.

VÃ©rifier si un arbre binaire est Ã©quilibrÃ©.

Ã‰crire un solveur pour le problÃ¨me des 8 reines.

ğŸ‘‰ Cette liste couvre une progression complÃ¨te :

Bases (arithmÃ©tique, boucles, chaÃ®nes, tableaux).

Concepts intermÃ©diaires (tri, recherche, manipulation de donnÃ©es).

Structures avancÃ©es (graphes, backtracking, DP).

Algorithmes classiques dâ€™IA et dâ€™optimisation.

Veux-tu que je crÃ©e un plan dâ€™entraÃ®nement sur plusieurs semaines (par exemple 5 exercices par jour classÃ©s par difficultÃ©), ou prÃ©fÃ¨res-tu piocher librement dans la liste ?